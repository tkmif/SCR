@model SCR.Root.Models.LocalOfficeModel
@{
    if (ViewData["type1"] == "edit")
    {
        ViewBag.Title = "Edit Local Office";
    }
    else
    {
        ViewBag.Title = "Add Local Office";
    }
    Layout = "~/Views/Shared/_SCRLayout.cshtml";
}
<script type='text/javascript' src="~/js/plugins/pnotify/jquery.pnotify.min.js"></script>
<script type='text/javascript' src="~/js/plugins.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        Notifybox();

    });

    function Notifybox() {

        if (('@TempData["error"]' != null && '@TempData["error"]' != "") && ('@TempData["errtitle"]' != "" && '@TempData["errtitle"]' != null)) {

            var message = '@TempData["error"]';
            var Title = '@TempData["errtitle"]';
            var ErrorType = '@TempData["errType"]';

            var errors = '@TempData.Remove("error")';
            var errtitles = '@TempData.Remove("errtitle")';
            var errTypes = '@TempData.Remove("errType")';

            if (ErrorType == "" && ErrorType == null) {
                ErrorType = "warning";
            }

            if (ErrorType == "success") {

                notify_s(Title, message);
            }
            else if (ErrorType == "info") {
                notify_i(Title, message);
            }
            else if (ErrorType == "error") {
                notify_e(Title, message);
            }
            else {
                notify(Title, message);
            }
        }
        else {
            var errors = '@TempData.Remove("error")';
            var errtitles = '@TempData.Remove("errtitle")';
            var errTypes = '@TempData.Remove("errType")';
            return true;
        }
    }


</script>
@using (Html.BeginForm("Add", "LocalOffice", FormMethod.Post, new { @class = "form-horizontal", @id = "validation" }))
{   
    @Html.ValidationSummary();   
    @Html.HiddenFor(model => model.LocalOfficeId, new { id = "hdnLocalOfficeId" })
    @Html.HiddenFor(model => model.LoginId)
    <div>

        <div class="block-fluid without-head span9">
            <div class="toolbar nopadding-toolbar clearfix">
                <h4>Local Office Details</h4>
            </div>
            <div class="row-form clearfix">
                <div class="span3">@Html.LabelFor(model => model.RegisteredNumber, "Registered Number", new { @id = "lblRegisteredNumber" })
                </div>
                <div class="span9">@Html.TextBoxFor(model => model.RegisteredNumber, new { id = "txtRegisteredNumber", @style = "width:40%;height:30px;margin-top:15px;margin:1% 2.5%;resize:none;", maxlength = 150, @class = "validate[required]" })
                </div>
            </div>
            <div class="row-form clearfix">
                <div class="span3">@Html.LabelFor(model => model.LocalOfficeName, "Local Office Name", new { @id = "lblLocalOfficeName" })
                </div>
                <div class="span9">@Html.TextBoxFor(model => model.LocalOfficeName, new { id = "txtLocalOfficeName", @style = "width:40%;height:30px;margin-top:15px;margin:1% 2.5%;resize:none;", maxlength = 150, @class = "validate[required]" })
                </div>
            </div>
            <div class="row-form clearfix">
                <div class="span3">@Html.LabelFor(model => model.LocalOfficeAddress, "Local Office Address")
                </div>
                <div class="span9">
                    @Html.TextAreaFor(model => model.LocalOfficeAddress, new { id = "txtLocalOfficeAddress", @style = "width:40%;height:50px;min-width:210px;margin-top: 15px; margin:1% 2.5%;resize:none;", maxlength = 180, @class = "validate[required]" })
                </div>
            </div>

            <div class="row-form clearfix">
                <div class="span3">
                    @Html.LabelFor(model => model.OfficePhoneNo, "Office Phone Number", new { @id = "lblOfficePhoneNo" })
                </div>
                <div class="span9">
                    @Html.TextBoxFor(model => model.OfficePhoneNo, new { id = "txtOfficePhoneNo", @style = "width:40%;height:30px;margin-top: 15px; margin:1% 2.5%;resize:none;", maxlength = 150, @class = "validate[required]" })
                </div>
            </div>

            <div class="row-form clearfix">
                <div class="span3">@Html.LabelFor(model => model.MailingZipCode, "Zip Code", new { @id = "lblMailingZipCode" })
                </div>
                <div class="span9">@Html.TextBoxFor(model => model.MailingZipCode, new { id = "txtMailingZipCode", @style = "width:40%;height:30px;margin-top: 15px; margin:1% 2.5%;resize:none;", maxlength = 150, @class = "validate[required]" }) </div>
            </div>


        </div>
        <div class="span9">
            @*  <button id="btnSave" class="btn" style="width: 10%" runat="server" >Save</button>*@
            <button id="btnSave" class="btn"  runat="server">
                Save 
             <i>
                 <img src="~/img/tick.png" class="pull-left imagepadding" /></i>
            </button>
          

            @if (ViewData["type1"] == "edit")
            {
                <span><i>
                    <img src="~/img/cross.png" />
                    <input type="button" id="btnCancel" value="Cancel" class="btn_cancel btn image-button" onclick="window.location = '../List'" />
                </i></span>
            }
            else
            {
                    
                <input type="button" id="btnCancel" value="Cancel" class="btn_cancel btn image-button" onclick="window.location = '../LocalOffice/List'" />
                  
            }
            @*<div class="btn"><a href="~/LocalOffice/List" >Cancel</a>    </div>  *@

        </div>
    </div>
}